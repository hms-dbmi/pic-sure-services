/*
 * This file is generated by jOOQ.
 */
package edu.harvard.dbmi.avillach.dataupload.codegen.generated.tables.records;


import edu.harvard.dbmi.avillach.dataupload.codegen.generated.tables.QueryStatus;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QueryStatusRecord extends UpdatableRecordImpl<QueryStatusRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>uploader.query_status.QUERY</code>.
     */
    public void setQuery(byte[] value) {
        set(0, value);
    }

    /**
     * Getter for <code>uploader.query_status.QUERY</code>.
     */
    public byte[] getQuery() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>uploader.query_status.GENOMIC_STATUS</code>.
     */
    public void setGenomicStatus(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>uploader.query_status.GENOMIC_STATUS</code>.
     */
    public String getGenomicStatus() {
        return (String) get(1);
    }

    /**
     * Setter for <code>uploader.query_status.PHENOTYPIC_STATUS</code>.
     */
    public void setPhenotypicStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>uploader.query_status.PHENOTYPIC_STATUS</code>.
     */
    public String getPhenotypicStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>uploader.query_status.APPROVED</code>.
     */
    public void setApproved(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>uploader.query_status.APPROVED</code>.
     */
    public LocalDateTime getApproved() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>uploader.query_status.SITE</code>.
     */
    public void setSite(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>uploader.query_status.SITE</code>.
     */
    public String getSite() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<byte[]> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QueryStatusRecord
     */
    public QueryStatusRecord() {
        super(QueryStatus.QUERY_STATUS);
    }

    /**
     * Create a detached, initialised QueryStatusRecord
     */
    public QueryStatusRecord(byte[] query, String genomicStatus, String phenotypicStatus, LocalDateTime approved, String site) {
        super(QueryStatus.QUERY_STATUS);

        setQuery(query);
        setGenomicStatus(genomicStatus);
        setPhenotypicStatus(phenotypicStatus);
        setApproved(approved);
        setSite(site);
        resetChangedOnNotNull();
    }
}
